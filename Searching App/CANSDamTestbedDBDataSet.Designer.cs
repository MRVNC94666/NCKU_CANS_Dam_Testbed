//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Searching_App {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CANSDamTestbedDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CANSDamTestbedDBDataSet : global::System.Data.DataSet {
        
        private Dam_Status_LogDataTable tableDam_Status_Log;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public CANSDamTestbedDBDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected CANSDamTestbedDBDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Dam_Status_Log"] != null)) {
                    base.Tables.Add(new Dam_Status_LogDataTable(ds.Tables["Dam_Status_Log"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Dam_Status_LogDataTable Dam_Status_Log {
            get {
                return this.tableDam_Status_Log;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            CANSDamTestbedDBDataSet cln = ((CANSDamTestbedDBDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Dam_Status_Log"] != null)) {
                    base.Tables.Add(new Dam_Status_LogDataTable(ds.Tables["Dam_Status_Log"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDam_Status_Log = ((Dam_Status_LogDataTable)(base.Tables["Dam_Status_Log"]));
            if ((initTable == true)) {
                if ((this.tableDam_Status_Log != null)) {
                    this.tableDam_Status_Log.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "CANSDamTestbedDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CANSDamTestbedDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDam_Status_Log = new Dam_Status_LogDataTable();
            base.Tables.Add(this.tableDam_Status_Log);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeDam_Status_Log() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CANSDamTestbedDBDataSet ds = new CANSDamTestbedDBDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Dam_Status_LogRowChangeEventHandler(object sender, Dam_Status_LogRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Dam_Status_LogDataTable : global::System.Data.TypedTableBase<Dam_Status_LogRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columntime;
            
            private global::System.Data.DataColumn columnreal_water_level;
            
            private global::System.Data.DataColumn columnreal_storage;
            
            private global::System.Data.DataColumn columnreal_storage_difference;
            
            private global::System.Data.DataColumn columnreal_total_inflow;
            
            private global::System.Data.DataColumn columnreal_gate1_opening;
            
            private global::System.Data.DataColumn columnreal_gate1_outflow;
            
            private global::System.Data.DataColumn columnreal_gate1_DI;
            
            private global::System.Data.DataColumn columnreal_gate1_DO;
            
            private global::System.Data.DataColumn columnreal_gate2_opening;
            
            private global::System.Data.DataColumn columnreal_gate2_outflow;
            
            private global::System.Data.DataColumn columnreal_gate2_DI;
            
            private global::System.Data.DataColumn columnreal_gate2_DO;
            
            private global::System.Data.DataColumn columnreal_gate3_opening;
            
            private global::System.Data.DataColumn columnreal_gate3_outflow;
            
            private global::System.Data.DataColumn columnreal_gate3_DI;
            
            private global::System.Data.DataColumn columnreal_gate3_DO;
            
            private global::System.Data.DataColumn columnreal_spillways_outflow;
            
            private global::System.Data.DataColumn columnreal_intake_outflow;
            
            private global::System.Data.DataColumn columnreal_total_outflow;
            
            private global::System.Data.DataColumn columnhmi_storage;
            
            private global::System.Data.DataColumn columnhmi_storage_difference;
            
            private global::System.Data.DataColumn columnhmi_total_inflow;
            
            private global::System.Data.DataColumn columnhmi_gate1_opening;
            
            private global::System.Data.DataColumn columnhmi_gate1_outflow;
            
            private global::System.Data.DataColumn columnhmi_gate1_DI;
            
            private global::System.Data.DataColumn columnhmi_gate1_DO;
            
            private global::System.Data.DataColumn columnhmi_gate2_opening;
            
            private global::System.Data.DataColumn columnhmi_gate2_outflow;
            
            private global::System.Data.DataColumn columnhmi_gate2_DI;
            
            private global::System.Data.DataColumn columnhmi_gate2_DO;
            
            private global::System.Data.DataColumn columnhmi_gate3_opening;
            
            private global::System.Data.DataColumn columnhmi_gate3_outflow;
            
            private global::System.Data.DataColumn columnhmi_gate3_DI;
            
            private global::System.Data.DataColumn columnhmi_gate3_DO;
            
            private global::System.Data.DataColumn columnhmi_spillways_outflow;
            
            private global::System.Data.DataColumn columnhmi_intake_outflow;
            
            private global::System.Data.DataColumn columnhmi_total_outflow;
            
            private global::System.Data.DataColumn columncontrol_gate1_opening;
            
            private global::System.Data.DataColumn columncontrol_gate2_opening;
            
            private global::System.Data.DataColumn columncontrol_gate3_opening;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Dam_Status_LogDataTable() {
                this.TableName = "Dam_Status_Log";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Dam_Status_LogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Dam_Status_LogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn timeColumn {
                get {
                    return this.columntime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_water_levelColumn {
                get {
                    return this.columnreal_water_level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_storageColumn {
                get {
                    return this.columnreal_storage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_storage_differenceColumn {
                get {
                    return this.columnreal_storage_difference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_total_inflowColumn {
                get {
                    return this.columnreal_total_inflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate1_openingColumn {
                get {
                    return this.columnreal_gate1_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate1_outflowColumn {
                get {
                    return this.columnreal_gate1_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate1_DIColumn {
                get {
                    return this.columnreal_gate1_DI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate1_DOColumn {
                get {
                    return this.columnreal_gate1_DO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate2_openingColumn {
                get {
                    return this.columnreal_gate2_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate2_outflowColumn {
                get {
                    return this.columnreal_gate2_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate2_DIColumn {
                get {
                    return this.columnreal_gate2_DI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate2_DOColumn {
                get {
                    return this.columnreal_gate2_DO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate3_openingColumn {
                get {
                    return this.columnreal_gate3_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate3_outflowColumn {
                get {
                    return this.columnreal_gate3_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate3_DIColumn {
                get {
                    return this.columnreal_gate3_DI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_gate3_DOColumn {
                get {
                    return this.columnreal_gate3_DO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_spillways_outflowColumn {
                get {
                    return this.columnreal_spillways_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_intake_outflowColumn {
                get {
                    return this.columnreal_intake_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn real_total_outflowColumn {
                get {
                    return this.columnreal_total_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_storageColumn {
                get {
                    return this.columnhmi_storage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_storage_differenceColumn {
                get {
                    return this.columnhmi_storage_difference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_total_inflowColumn {
                get {
                    return this.columnhmi_total_inflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate1_openingColumn {
                get {
                    return this.columnhmi_gate1_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate1_outflowColumn {
                get {
                    return this.columnhmi_gate1_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate1_DIColumn {
                get {
                    return this.columnhmi_gate1_DI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate1_DOColumn {
                get {
                    return this.columnhmi_gate1_DO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate2_openingColumn {
                get {
                    return this.columnhmi_gate2_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate2_outflowColumn {
                get {
                    return this.columnhmi_gate2_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate2_DIColumn {
                get {
                    return this.columnhmi_gate2_DI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate2_DOColumn {
                get {
                    return this.columnhmi_gate2_DO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate3_openingColumn {
                get {
                    return this.columnhmi_gate3_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate3_outflowColumn {
                get {
                    return this.columnhmi_gate3_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate3_DIColumn {
                get {
                    return this.columnhmi_gate3_DI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_gate3_DOColumn {
                get {
                    return this.columnhmi_gate3_DO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_spillways_outflowColumn {
                get {
                    return this.columnhmi_spillways_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_intake_outflowColumn {
                get {
                    return this.columnhmi_intake_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn hmi_total_outflowColumn {
                get {
                    return this.columnhmi_total_outflow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn control_gate1_openingColumn {
                get {
                    return this.columncontrol_gate1_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn control_gate2_openingColumn {
                get {
                    return this.columncontrol_gate2_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn control_gate3_openingColumn {
                get {
                    return this.columncontrol_gate3_opening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Dam_Status_LogRow this[int index] {
                get {
                    return ((Dam_Status_LogRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Dam_Status_LogRowChangeEventHandler Dam_Status_LogRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Dam_Status_LogRowChangeEventHandler Dam_Status_LogRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Dam_Status_LogRowChangeEventHandler Dam_Status_LogRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Dam_Status_LogRowChangeEventHandler Dam_Status_LogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddDam_Status_LogRow(Dam_Status_LogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Dam_Status_LogRow AddDam_Status_LogRow(
                        System.DateTime time, 
                        double real_water_level, 
                        double real_storage, 
                        double real_storage_difference, 
                        double real_total_inflow, 
                        double real_gate1_opening, 
                        double real_gate1_outflow, 
                        bool real_gate1_DI, 
                        bool real_gate1_DO, 
                        double real_gate2_opening, 
                        double real_gate2_outflow, 
                        bool real_gate2_DI, 
                        bool real_gate2_DO, 
                        double real_gate3_opening, 
                        double real_gate3_outflow, 
                        bool real_gate3_DI, 
                        bool real_gate3_DO, 
                        double real_spillways_outflow, 
                        double real_intake_outflow, 
                        double real_total_outflow, 
                        double hmi_storage, 
                        double hmi_storage_difference, 
                        double hmi_total_inflow, 
                        double hmi_gate1_opening, 
                        double hmi_gate1_outflow, 
                        bool hmi_gate1_DI, 
                        bool hmi_gate1_DO, 
                        double hmi_gate2_opening, 
                        double hmi_gate2_outflow, 
                        bool hmi_gate2_DI, 
                        bool hmi_gate2_DO, 
                        double hmi_gate3_opening, 
                        double hmi_gate3_outflow, 
                        bool hmi_gate3_DI, 
                        bool hmi_gate3_DO, 
                        double hmi_spillways_outflow, 
                        double hmi_intake_outflow, 
                        double hmi_total_outflow, 
                        double control_gate1_opening, 
                        double control_gate2_opening, 
                        double control_gate3_opening) {
                Dam_Status_LogRow rowDam_Status_LogRow = ((Dam_Status_LogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        time,
                        real_water_level,
                        real_storage,
                        real_storage_difference,
                        real_total_inflow,
                        real_gate1_opening,
                        real_gate1_outflow,
                        real_gate1_DI,
                        real_gate1_DO,
                        real_gate2_opening,
                        real_gate2_outflow,
                        real_gate2_DI,
                        real_gate2_DO,
                        real_gate3_opening,
                        real_gate3_outflow,
                        real_gate3_DI,
                        real_gate3_DO,
                        real_spillways_outflow,
                        real_intake_outflow,
                        real_total_outflow,
                        hmi_storage,
                        hmi_storage_difference,
                        hmi_total_inflow,
                        hmi_gate1_opening,
                        hmi_gate1_outflow,
                        hmi_gate1_DI,
                        hmi_gate1_DO,
                        hmi_gate2_opening,
                        hmi_gate2_outflow,
                        hmi_gate2_DI,
                        hmi_gate2_DO,
                        hmi_gate3_opening,
                        hmi_gate3_outflow,
                        hmi_gate3_DI,
                        hmi_gate3_DO,
                        hmi_spillways_outflow,
                        hmi_intake_outflow,
                        hmi_total_outflow,
                        control_gate1_opening,
                        control_gate2_opening,
                        control_gate3_opening};
                rowDam_Status_LogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDam_Status_LogRow);
                return rowDam_Status_LogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Dam_Status_LogRow FindByidtime(int id, System.DateTime time) {
                return ((Dam_Status_LogRow)(this.Rows.Find(new object[] {
                            id,
                            time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Dam_Status_LogDataTable cln = ((Dam_Status_LogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Dam_Status_LogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columntime = base.Columns["time"];
                this.columnreal_water_level = base.Columns["real_water_level"];
                this.columnreal_storage = base.Columns["real_storage"];
                this.columnreal_storage_difference = base.Columns["real_storage_difference"];
                this.columnreal_total_inflow = base.Columns["real_total_inflow"];
                this.columnreal_gate1_opening = base.Columns["real_gate1_opening"];
                this.columnreal_gate1_outflow = base.Columns["real_gate1_outflow"];
                this.columnreal_gate1_DI = base.Columns["real_gate1_DI"];
                this.columnreal_gate1_DO = base.Columns["real_gate1_DO"];
                this.columnreal_gate2_opening = base.Columns["real_gate2_opening"];
                this.columnreal_gate2_outflow = base.Columns["real_gate2_outflow"];
                this.columnreal_gate2_DI = base.Columns["real_gate2_DI"];
                this.columnreal_gate2_DO = base.Columns["real_gate2_DO"];
                this.columnreal_gate3_opening = base.Columns["real_gate3_opening"];
                this.columnreal_gate3_outflow = base.Columns["real_gate3_outflow"];
                this.columnreal_gate3_DI = base.Columns["real_gate3_DI"];
                this.columnreal_gate3_DO = base.Columns["real_gate3_DO"];
                this.columnreal_spillways_outflow = base.Columns["real_spillways_outflow"];
                this.columnreal_intake_outflow = base.Columns["real_intake_outflow"];
                this.columnreal_total_outflow = base.Columns["real_total_outflow"];
                this.columnhmi_storage = base.Columns["hmi_storage"];
                this.columnhmi_storage_difference = base.Columns["hmi_storage_difference"];
                this.columnhmi_total_inflow = base.Columns["hmi_total_inflow"];
                this.columnhmi_gate1_opening = base.Columns["hmi_gate1_opening"];
                this.columnhmi_gate1_outflow = base.Columns["hmi_gate1_outflow"];
                this.columnhmi_gate1_DI = base.Columns["hmi_gate1_DI"];
                this.columnhmi_gate1_DO = base.Columns["hmi_gate1_DO"];
                this.columnhmi_gate2_opening = base.Columns["hmi_gate2_opening"];
                this.columnhmi_gate2_outflow = base.Columns["hmi_gate2_outflow"];
                this.columnhmi_gate2_DI = base.Columns["hmi_gate2_DI"];
                this.columnhmi_gate2_DO = base.Columns["hmi_gate2_DO"];
                this.columnhmi_gate3_opening = base.Columns["hmi_gate3_opening"];
                this.columnhmi_gate3_outflow = base.Columns["hmi_gate3_outflow"];
                this.columnhmi_gate3_DI = base.Columns["hmi_gate3_DI"];
                this.columnhmi_gate3_DO = base.Columns["hmi_gate3_DO"];
                this.columnhmi_spillways_outflow = base.Columns["hmi_spillways_outflow"];
                this.columnhmi_intake_outflow = base.Columns["hmi_intake_outflow"];
                this.columnhmi_total_outflow = base.Columns["hmi_total_outflow"];
                this.columncontrol_gate1_opening = base.Columns["control_gate1_opening"];
                this.columncontrol_gate2_opening = base.Columns["control_gate2_opening"];
                this.columncontrol_gate3_opening = base.Columns["control_gate3_opening"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columntime = new global::System.Data.DataColumn("time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime);
                this.columnreal_water_level = new global::System.Data.DataColumn("real_water_level", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_water_level);
                this.columnreal_storage = new global::System.Data.DataColumn("real_storage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_storage);
                this.columnreal_storage_difference = new global::System.Data.DataColumn("real_storage_difference", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_storage_difference);
                this.columnreal_total_inflow = new global::System.Data.DataColumn("real_total_inflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_total_inflow);
                this.columnreal_gate1_opening = new global::System.Data.DataColumn("real_gate1_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate1_opening);
                this.columnreal_gate1_outflow = new global::System.Data.DataColumn("real_gate1_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate1_outflow);
                this.columnreal_gate1_DI = new global::System.Data.DataColumn("real_gate1_DI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate1_DI);
                this.columnreal_gate1_DO = new global::System.Data.DataColumn("real_gate1_DO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate1_DO);
                this.columnreal_gate2_opening = new global::System.Data.DataColumn("real_gate2_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate2_opening);
                this.columnreal_gate2_outflow = new global::System.Data.DataColumn("real_gate2_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate2_outflow);
                this.columnreal_gate2_DI = new global::System.Data.DataColumn("real_gate2_DI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate2_DI);
                this.columnreal_gate2_DO = new global::System.Data.DataColumn("real_gate2_DO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate2_DO);
                this.columnreal_gate3_opening = new global::System.Data.DataColumn("real_gate3_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate3_opening);
                this.columnreal_gate3_outflow = new global::System.Data.DataColumn("real_gate3_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate3_outflow);
                this.columnreal_gate3_DI = new global::System.Data.DataColumn("real_gate3_DI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate3_DI);
                this.columnreal_gate3_DO = new global::System.Data.DataColumn("real_gate3_DO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_gate3_DO);
                this.columnreal_spillways_outflow = new global::System.Data.DataColumn("real_spillways_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_spillways_outflow);
                this.columnreal_intake_outflow = new global::System.Data.DataColumn("real_intake_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_intake_outflow);
                this.columnreal_total_outflow = new global::System.Data.DataColumn("real_total_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreal_total_outflow);
                this.columnhmi_storage = new global::System.Data.DataColumn("hmi_storage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_storage);
                this.columnhmi_storage_difference = new global::System.Data.DataColumn("hmi_storage_difference", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_storage_difference);
                this.columnhmi_total_inflow = new global::System.Data.DataColumn("hmi_total_inflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_total_inflow);
                this.columnhmi_gate1_opening = new global::System.Data.DataColumn("hmi_gate1_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate1_opening);
                this.columnhmi_gate1_outflow = new global::System.Data.DataColumn("hmi_gate1_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate1_outflow);
                this.columnhmi_gate1_DI = new global::System.Data.DataColumn("hmi_gate1_DI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate1_DI);
                this.columnhmi_gate1_DO = new global::System.Data.DataColumn("hmi_gate1_DO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate1_DO);
                this.columnhmi_gate2_opening = new global::System.Data.DataColumn("hmi_gate2_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate2_opening);
                this.columnhmi_gate2_outflow = new global::System.Data.DataColumn("hmi_gate2_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate2_outflow);
                this.columnhmi_gate2_DI = new global::System.Data.DataColumn("hmi_gate2_DI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate2_DI);
                this.columnhmi_gate2_DO = new global::System.Data.DataColumn("hmi_gate2_DO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate2_DO);
                this.columnhmi_gate3_opening = new global::System.Data.DataColumn("hmi_gate3_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate3_opening);
                this.columnhmi_gate3_outflow = new global::System.Data.DataColumn("hmi_gate3_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate3_outflow);
                this.columnhmi_gate3_DI = new global::System.Data.DataColumn("hmi_gate3_DI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate3_DI);
                this.columnhmi_gate3_DO = new global::System.Data.DataColumn("hmi_gate3_DO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_gate3_DO);
                this.columnhmi_spillways_outflow = new global::System.Data.DataColumn("hmi_spillways_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_spillways_outflow);
                this.columnhmi_intake_outflow = new global::System.Data.DataColumn("hmi_intake_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_intake_outflow);
                this.columnhmi_total_outflow = new global::System.Data.DataColumn("hmi_total_outflow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhmi_total_outflow);
                this.columncontrol_gate1_opening = new global::System.Data.DataColumn("control_gate1_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontrol_gate1_opening);
                this.columncontrol_gate2_opening = new global::System.Data.DataColumn("control_gate2_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontrol_gate2_opening);
                this.columncontrol_gate3_opening = new global::System.Data.DataColumn("control_gate3_opening", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontrol_gate3_opening);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid,
                                this.columntime}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columntime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Dam_Status_LogRow NewDam_Status_LogRow() {
                return ((Dam_Status_LogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Dam_Status_LogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Dam_Status_LogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Dam_Status_LogRowChanged != null)) {
                    this.Dam_Status_LogRowChanged(this, new Dam_Status_LogRowChangeEvent(((Dam_Status_LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Dam_Status_LogRowChanging != null)) {
                    this.Dam_Status_LogRowChanging(this, new Dam_Status_LogRowChangeEvent(((Dam_Status_LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Dam_Status_LogRowDeleted != null)) {
                    this.Dam_Status_LogRowDeleted(this, new Dam_Status_LogRowChangeEvent(((Dam_Status_LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Dam_Status_LogRowDeleting != null)) {
                    this.Dam_Status_LogRowDeleting(this, new Dam_Status_LogRowChangeEvent(((Dam_Status_LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveDam_Status_LogRow(Dam_Status_LogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CANSDamTestbedDBDataSet ds = new CANSDamTestbedDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Dam_Status_LogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Dam_Status_LogRow : global::System.Data.DataRow {
            
            private Dam_Status_LogDataTable tableDam_Status_Log;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Dam_Status_LogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDam_Status_Log = ((Dam_Status_LogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableDam_Status_Log.idColumn]));
                }
                set {
                    this[this.tableDam_Status_Log.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime time {
                get {
                    return ((global::System.DateTime)(this[this.tableDam_Status_Log.timeColumn]));
                }
                set {
                    this[this.tableDam_Status_Log.timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_water_level {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_water_levelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_water_level\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_water_levelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_storage {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_storageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_storage\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_storageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_storage_difference {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_storage_differenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_storage_difference\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_storage_differenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_total_inflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_total_inflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_total_inflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_total_inflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_gate1_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_gate1_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate1_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate1_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_gate1_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_gate1_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate1_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate1_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool real_gate1_DI {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.real_gate1_DIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate1_DI\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate1_DIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool real_gate1_DO {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.real_gate1_DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate1_DO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate1_DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_gate2_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_gate2_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate2_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate2_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_gate2_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_gate2_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate2_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate2_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool real_gate2_DI {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.real_gate2_DIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate2_DI\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate2_DIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool real_gate2_DO {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.real_gate2_DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate2_DO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate2_DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_gate3_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_gate3_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate3_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate3_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_gate3_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_gate3_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate3_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate3_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool real_gate3_DI {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.real_gate3_DIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate3_DI\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate3_DIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool real_gate3_DO {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.real_gate3_DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_gate3_DO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_gate3_DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_spillways_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_spillways_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_spillways_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_spillways_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_intake_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_intake_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_intake_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_intake_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double real_total_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.real_total_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'real_total_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.real_total_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_storage {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_storageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_storage\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_storageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_storage_difference {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_storage_differenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_storage_difference\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_storage_differenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_total_inflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_total_inflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_total_inflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_total_inflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_gate1_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_gate1_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate1_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate1_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_gate1_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_gate1_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate1_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate1_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool hmi_gate1_DI {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.hmi_gate1_DIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate1_DI\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate1_DIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool hmi_gate1_DO {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.hmi_gate1_DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate1_DO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate1_DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_gate2_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_gate2_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate2_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate2_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_gate2_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_gate2_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate2_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate2_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool hmi_gate2_DI {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.hmi_gate2_DIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate2_DI\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate2_DIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool hmi_gate2_DO {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.hmi_gate2_DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate2_DO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate2_DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_gate3_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_gate3_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate3_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate3_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_gate3_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_gate3_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate3_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate3_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool hmi_gate3_DI {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.hmi_gate3_DIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate3_DI\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate3_DIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool hmi_gate3_DO {
                get {
                    try {
                        return ((bool)(this[this.tableDam_Status_Log.hmi_gate3_DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_gate3_DO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_gate3_DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_spillways_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_spillways_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_spillways_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_spillways_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_intake_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_intake_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_intake_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_intake_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double hmi_total_outflow {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.hmi_total_outflowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'hmi_total_outflow\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.hmi_total_outflowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double control_gate1_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.control_gate1_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'control_gate1_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.control_gate1_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double control_gate2_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.control_gate2_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'control_gate2_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.control_gate2_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double control_gate3_opening {
                get {
                    try {
                        return ((double)(this[this.tableDam_Status_Log.control_gate3_openingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'Dam_Status_Log\' 中資料行 \'control_gate3_opening\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDam_Status_Log.control_gate3_openingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_water_levelNull() {
                return this.IsNull(this.tableDam_Status_Log.real_water_levelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_water_levelNull() {
                this[this.tableDam_Status_Log.real_water_levelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_storageNull() {
                return this.IsNull(this.tableDam_Status_Log.real_storageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_storageNull() {
                this[this.tableDam_Status_Log.real_storageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_storage_differenceNull() {
                return this.IsNull(this.tableDam_Status_Log.real_storage_differenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_storage_differenceNull() {
                this[this.tableDam_Status_Log.real_storage_differenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_total_inflowNull() {
                return this.IsNull(this.tableDam_Status_Log.real_total_inflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_total_inflowNull() {
                this[this.tableDam_Status_Log.real_total_inflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate1_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate1_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate1_openingNull() {
                this[this.tableDam_Status_Log.real_gate1_openingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate1_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate1_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate1_outflowNull() {
                this[this.tableDam_Status_Log.real_gate1_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate1_DINull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate1_DIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate1_DINull() {
                this[this.tableDam_Status_Log.real_gate1_DIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate1_DONull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate1_DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate1_DONull() {
                this[this.tableDam_Status_Log.real_gate1_DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate2_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate2_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate2_openingNull() {
                this[this.tableDam_Status_Log.real_gate2_openingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate2_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate2_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate2_outflowNull() {
                this[this.tableDam_Status_Log.real_gate2_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate2_DINull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate2_DIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate2_DINull() {
                this[this.tableDam_Status_Log.real_gate2_DIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate2_DONull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate2_DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate2_DONull() {
                this[this.tableDam_Status_Log.real_gate2_DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate3_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate3_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate3_openingNull() {
                this[this.tableDam_Status_Log.real_gate3_openingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate3_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate3_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate3_outflowNull() {
                this[this.tableDam_Status_Log.real_gate3_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate3_DINull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate3_DIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate3_DINull() {
                this[this.tableDam_Status_Log.real_gate3_DIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_gate3_DONull() {
                return this.IsNull(this.tableDam_Status_Log.real_gate3_DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_gate3_DONull() {
                this[this.tableDam_Status_Log.real_gate3_DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_spillways_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.real_spillways_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_spillways_outflowNull() {
                this[this.tableDam_Status_Log.real_spillways_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_intake_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.real_intake_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_intake_outflowNull() {
                this[this.tableDam_Status_Log.real_intake_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isreal_total_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.real_total_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setreal_total_outflowNull() {
                this[this.tableDam_Status_Log.real_total_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_storageNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_storageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_storageNull() {
                this[this.tableDam_Status_Log.hmi_storageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_storage_differenceNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_storage_differenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_storage_differenceNull() {
                this[this.tableDam_Status_Log.hmi_storage_differenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_total_inflowNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_total_inflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_total_inflowNull() {
                this[this.tableDam_Status_Log.hmi_total_inflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate1_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate1_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate1_openingNull() {
                this[this.tableDam_Status_Log.hmi_gate1_openingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate1_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate1_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate1_outflowNull() {
                this[this.tableDam_Status_Log.hmi_gate1_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate1_DINull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate1_DIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate1_DINull() {
                this[this.tableDam_Status_Log.hmi_gate1_DIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate1_DONull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate1_DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate1_DONull() {
                this[this.tableDam_Status_Log.hmi_gate1_DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate2_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate2_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate2_openingNull() {
                this[this.tableDam_Status_Log.hmi_gate2_openingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate2_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate2_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate2_outflowNull() {
                this[this.tableDam_Status_Log.hmi_gate2_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate2_DINull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate2_DIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate2_DINull() {
                this[this.tableDam_Status_Log.hmi_gate2_DIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate2_DONull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate2_DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate2_DONull() {
                this[this.tableDam_Status_Log.hmi_gate2_DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate3_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate3_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate3_openingNull() {
                this[this.tableDam_Status_Log.hmi_gate3_openingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate3_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate3_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate3_outflowNull() {
                this[this.tableDam_Status_Log.hmi_gate3_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate3_DINull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate3_DIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate3_DINull() {
                this[this.tableDam_Status_Log.hmi_gate3_DIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_gate3_DONull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_gate3_DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_gate3_DONull() {
                this[this.tableDam_Status_Log.hmi_gate3_DOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_spillways_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_spillways_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_spillways_outflowNull() {
                this[this.tableDam_Status_Log.hmi_spillways_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_intake_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_intake_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_intake_outflowNull() {
                this[this.tableDam_Status_Log.hmi_intake_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Ishmi_total_outflowNull() {
                return this.IsNull(this.tableDam_Status_Log.hmi_total_outflowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Sethmi_total_outflowNull() {
                this[this.tableDam_Status_Log.hmi_total_outflowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iscontrol_gate1_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.control_gate1_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setcontrol_gate1_openingNull() {
                this[this.tableDam_Status_Log.control_gate1_openingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iscontrol_gate2_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.control_gate2_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setcontrol_gate2_openingNull() {
                this[this.tableDam_Status_Log.control_gate2_openingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iscontrol_gate3_openingNull() {
                return this.IsNull(this.tableDam_Status_Log.control_gate3_openingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setcontrol_gate3_openingNull() {
                this[this.tableDam_Status_Log.control_gate3_openingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Dam_Status_LogRowChangeEvent : global::System.EventArgs {
            
            private Dam_Status_LogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Dam_Status_LogRowChangeEvent(Dam_Status_LogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Dam_Status_LogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Searching_App.CANSDamTestbedDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Dam_Status_LogTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Dam_Status_LogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Dam_Status_Log";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("time", "time");
            tableMapping.ColumnMappings.Add("real_water_level", "real_water_level");
            tableMapping.ColumnMappings.Add("real_storage", "real_storage");
            tableMapping.ColumnMappings.Add("real_storage_difference", "real_storage_difference");
            tableMapping.ColumnMappings.Add("real_total_inflow", "real_total_inflow");
            tableMapping.ColumnMappings.Add("real_gate1_opening", "real_gate1_opening");
            tableMapping.ColumnMappings.Add("real_gate1_outflow", "real_gate1_outflow");
            tableMapping.ColumnMappings.Add("real_gate1_DI", "real_gate1_DI");
            tableMapping.ColumnMappings.Add("real_gate1_DO", "real_gate1_DO");
            tableMapping.ColumnMappings.Add("real_gate2_opening", "real_gate2_opening");
            tableMapping.ColumnMappings.Add("real_gate2_outflow", "real_gate2_outflow");
            tableMapping.ColumnMappings.Add("real_gate2_DI", "real_gate2_DI");
            tableMapping.ColumnMappings.Add("real_gate2_DO", "real_gate2_DO");
            tableMapping.ColumnMappings.Add("real_gate3_opening", "real_gate3_opening");
            tableMapping.ColumnMappings.Add("real_gate3_outflow", "real_gate3_outflow");
            tableMapping.ColumnMappings.Add("real_gate3_DI", "real_gate3_DI");
            tableMapping.ColumnMappings.Add("real_gate3_DO", "real_gate3_DO");
            tableMapping.ColumnMappings.Add("real_spillways_outflow", "real_spillways_outflow");
            tableMapping.ColumnMappings.Add("real_intake_outflow", "real_intake_outflow");
            tableMapping.ColumnMappings.Add("real_total_outflow", "real_total_outflow");
            tableMapping.ColumnMappings.Add("hmi_storage", "hmi_storage");
            tableMapping.ColumnMappings.Add("hmi_storage_difference", "hmi_storage_difference");
            tableMapping.ColumnMappings.Add("hmi_total_inflow", "hmi_total_inflow");
            tableMapping.ColumnMappings.Add("hmi_gate1_opening", "hmi_gate1_opening");
            tableMapping.ColumnMappings.Add("hmi_gate1_outflow", "hmi_gate1_outflow");
            tableMapping.ColumnMappings.Add("hmi_gate1_DI", "hmi_gate1_DI");
            tableMapping.ColumnMappings.Add("hmi_gate1_DO", "hmi_gate1_DO");
            tableMapping.ColumnMappings.Add("hmi_gate2_opening", "hmi_gate2_opening");
            tableMapping.ColumnMappings.Add("hmi_gate2_outflow", "hmi_gate2_outflow");
            tableMapping.ColumnMappings.Add("hmi_gate2_DI", "hmi_gate2_DI");
            tableMapping.ColumnMappings.Add("hmi_gate2_DO", "hmi_gate2_DO");
            tableMapping.ColumnMappings.Add("hmi_gate3_opening", "hmi_gate3_opening");
            tableMapping.ColumnMappings.Add("hmi_gate3_outflow", "hmi_gate3_outflow");
            tableMapping.ColumnMappings.Add("hmi_gate3_DI", "hmi_gate3_DI");
            tableMapping.ColumnMappings.Add("hmi_gate3_DO", "hmi_gate3_DO");
            tableMapping.ColumnMappings.Add("hmi_spillways_outflow", "hmi_spillways_outflow");
            tableMapping.ColumnMappings.Add("hmi_intake_outflow", "hmi_intake_outflow");
            tableMapping.ColumnMappings.Add("hmi_total_outflow", "hmi_total_outflow");
            tableMapping.ColumnMappings.Add("control_gate1_opening", "control_gate1_opening");
            tableMapping.ColumnMappings.Add("control_gate2_opening", "control_gate2_opening");
            tableMapping.ColumnMappings.Add("control_gate3_opening", "control_gate3_opening");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Dam_Status_Log] WHERE (([id] = @Original_id) AND ([time] = @Or" +
                "iginal_time) AND ((@IsNull_real_water_level = 1 AND [real_water_level] IS NULL) " +
                "OR ([real_water_level] = @Original_real_water_level)) AND ((@IsNull_real_storage" +
                " = 1 AND [real_storage] IS NULL) OR ([real_storage] = @Original_real_storage)) A" +
                "ND ((@IsNull_real_storage_difference = 1 AND [real_storage_difference] IS NULL) " +
                "OR ([real_storage_difference] = @Original_real_storage_difference)) AND ((@IsNul" +
                "l_real_total_inflow = 1 AND [real_total_inflow] IS NULL) OR ([real_total_inflow]" +
                " = @Original_real_total_inflow)) AND ((@IsNull_real_gate1_opening = 1 AND [real_" +
                "gate1_opening] IS NULL) OR ([real_gate1_opening] = @Original_real_gate1_opening)" +
                ") AND ((@IsNull_real_gate1_outflow = 1 AND [real_gate1_outflow] IS NULL) OR ([re" +
                "al_gate1_outflow] = @Original_real_gate1_outflow)) AND ((@IsNull_real_gate1_DI =" +
                " 1 AND [real_gate1_DI] IS NULL) OR ([real_gate1_DI] = @Original_real_gate1_DI)) " +
                "AND ((@IsNull_real_gate1_DO = 1 AND [real_gate1_DO] IS NULL) OR ([real_gate1_DO]" +
                " = @Original_real_gate1_DO)) AND ((@IsNull_real_gate2_opening = 1 AND [real_gate" +
                "2_opening] IS NULL) OR ([real_gate2_opening] = @Original_real_gate2_opening)) AN" +
                "D ((@IsNull_real_gate2_outflow = 1 AND [real_gate2_outflow] IS NULL) OR ([real_g" +
                "ate2_outflow] = @Original_real_gate2_outflow)) AND ((@IsNull_real_gate2_DI = 1 A" +
                "ND [real_gate2_DI] IS NULL) OR ([real_gate2_DI] = @Original_real_gate2_DI)) AND " +
                "((@IsNull_real_gate2_DO = 1 AND [real_gate2_DO] IS NULL) OR ([real_gate2_DO] = @" +
                "Original_real_gate2_DO)) AND ((@IsNull_real_gate3_opening = 1 AND [real_gate3_op" +
                "ening] IS NULL) OR ([real_gate3_opening] = @Original_real_gate3_opening)) AND ((" +
                "@IsNull_real_gate3_outflow = 1 AND [real_gate3_outflow] IS NULL) OR ([real_gate3" +
                "_outflow] = @Original_real_gate3_outflow)) AND ((@IsNull_real_gate3_DI = 1 AND [" +
                "real_gate3_DI] IS NULL) OR ([real_gate3_DI] = @Original_real_gate3_DI)) AND ((@I" +
                "sNull_real_gate3_DO = 1 AND [real_gate3_DO] IS NULL) OR ([real_gate3_DO] = @Orig" +
                "inal_real_gate3_DO)) AND ((@IsNull_real_spillways_outflow = 1 AND [real_spillway" +
                "s_outflow] IS NULL) OR ([real_spillways_outflow] = @Original_real_spillways_outf" +
                "low)) AND ((@IsNull_real_intake_outflow = 1 AND [real_intake_outflow] IS NULL) O" +
                "R ([real_intake_outflow] = @Original_real_intake_outflow)) AND ((@IsNull_real_to" +
                "tal_outflow = 1 AND [real_total_outflow] IS NULL) OR ([real_total_outflow] = @Or" +
                "iginal_real_total_outflow)) AND ((@IsNull_hmi_storage = 1 AND [hmi_storage] IS N" +
                "ULL) OR ([hmi_storage] = @Original_hmi_storage)) AND ((@IsNull_hmi_storage_diffe" +
                "rence = 1 AND [hmi_storage_difference] IS NULL) OR ([hmi_storage_difference] = @" +
                "Original_hmi_storage_difference)) AND ((@IsNull_hmi_total_inflow = 1 AND [hmi_to" +
                "tal_inflow] IS NULL) OR ([hmi_total_inflow] = @Original_hmi_total_inflow)) AND (" +
                "(@IsNull_hmi_gate1_opening = 1 AND [hmi_gate1_opening] IS NULL) OR ([hmi_gate1_o" +
                "pening] = @Original_hmi_gate1_opening)) AND ((@IsNull_hmi_gate1_outflow = 1 AND " +
                "[hmi_gate1_outflow] IS NULL) OR ([hmi_gate1_outflow] = @Original_hmi_gate1_outfl" +
                "ow)) AND ((@IsNull_hmi_gate1_DI = 1 AND [hmi_gate1_DI] IS NULL) OR ([hmi_gate1_D" +
                "I] = @Original_hmi_gate1_DI)) AND ((@IsNull_hmi_gate1_DO = 1 AND [hmi_gate1_DO] " +
                "IS NULL) OR ([hmi_gate1_DO] = @Original_hmi_gate1_DO)) AND ((@IsNull_hmi_gate2_o" +
                "pening = 1 AND [hmi_gate2_opening] IS NULL) OR ([hmi_gate2_opening] = @Original_" +
                "hmi_gate2_opening)) AND ((@IsNull_hmi_gate2_outflow = 1 AND [hmi_gate2_outflow] " +
                "IS NULL) OR ([hmi_gate2_outflow] = @Original_hmi_gate2_outflow)) AND ((@IsNull_h" +
                "mi_gate2_DI = 1 AND [hmi_gate2_DI] IS NULL) OR ([hmi_gate2_DI] = @Original_hmi_g" +
                "ate2_DI)) AND ((@IsNull_hmi_gate2_DO = 1 AND [hmi_gate2_DO] IS NULL) OR ([hmi_ga" +
                "te2_DO] = @Original_hmi_gate2_DO)) AND ((@IsNull_hmi_gate3_opening = 1 AND [hmi_" +
                "gate3_opening] IS NULL) OR ([hmi_gate3_opening] = @Original_hmi_gate3_opening)) " +
                "AND ((@IsNull_hmi_gate3_outflow = 1 AND [hmi_gate3_outflow] IS NULL) OR ([hmi_ga" +
                "te3_outflow] = @Original_hmi_gate3_outflow)) AND ((@IsNull_hmi_gate3_DI = 1 AND " +
                "[hmi_gate3_DI] IS NULL) OR ([hmi_gate3_DI] = @Original_hmi_gate3_DI)) AND ((@IsN" +
                "ull_hmi_gate3_DO = 1 AND [hmi_gate3_DO] IS NULL) OR ([hmi_gate3_DO] = @Original_" +
                "hmi_gate3_DO)) AND ((@IsNull_hmi_spillways_outflow = 1 AND [hmi_spillways_outflo" +
                "w] IS NULL) OR ([hmi_spillways_outflow] = @Original_hmi_spillways_outflow)) AND " +
                "((@IsNull_hmi_intake_outflow = 1 AND [hmi_intake_outflow] IS NULL) OR ([hmi_inta" +
                "ke_outflow] = @Original_hmi_intake_outflow)) AND ((@IsNull_hmi_total_outflow = 1" +
                " AND [hmi_total_outflow] IS NULL) OR ([hmi_total_outflow] = @Original_hmi_total_" +
                "outflow)) AND ((@IsNull_control_gate1_opening = 1 AND [control_gate1_opening] IS" +
                " NULL) OR ([control_gate1_opening] = @Original_control_gate1_opening)) AND ((@Is" +
                "Null_control_gate2_opening = 1 AND [control_gate2_opening] IS NULL) OR ([control" +
                "_gate2_opening] = @Original_control_gate2_opening)) AND ((@IsNull_control_gate3_" +
                "opening = 1 AND [control_gate3_opening] IS NULL) OR ([control_gate3_opening] = @" +
                "Original_control_gate3_opening)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_water_level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_water_level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_water_level", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_water_level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_storage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_storage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_storage_difference", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage_difference", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_storage_difference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage_difference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_total_inflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_inflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_total_inflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_inflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate1_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate1_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate1_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate1_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate1_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate1_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate1_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate2_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate2_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate2_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate2_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate2_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate2_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate2_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate3_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate3_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate3_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate3_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate3_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate3_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate3_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_spillways_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_spillways_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_spillways_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_spillways_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_intake_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_intake_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_intake_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_intake_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_total_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_total_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_storage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_storage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_storage_difference", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage_difference", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_storage_difference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage_difference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_total_inflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_inflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_total_inflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_inflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate1_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate1_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate1_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate1_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate1_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate1_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate1_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate2_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate2_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate2_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate2_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate2_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate2_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate2_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate3_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate3_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate3_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate3_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate3_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate3_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate3_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_spillways_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_spillways_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_spillways_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_spillways_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_intake_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_intake_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_intake_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_intake_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_total_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_total_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_control_gate1_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate1_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_control_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate1_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_control_gate2_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate2_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_control_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate2_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_control_gate3_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate3_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_control_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate3_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Dam_Status_Log] ([time], [real_water_level], [real_storage], [" +
                "real_storage_difference], [real_total_inflow], [real_gate1_opening], [real_gate1" +
                "_outflow], [real_gate1_DI], [real_gate1_DO], [real_gate2_opening], [real_gate2_o" +
                "utflow], [real_gate2_DI], [real_gate2_DO], [real_gate3_opening], [real_gate3_out" +
                "flow], [real_gate3_DI], [real_gate3_DO], [real_spillways_outflow], [real_intake_" +
                "outflow], [real_total_outflow], [hmi_storage], [hmi_storage_difference], [hmi_to" +
                "tal_inflow], [hmi_gate1_opening], [hmi_gate1_outflow], [hmi_gate1_DI], [hmi_gate" +
                "1_DO], [hmi_gate2_opening], [hmi_gate2_outflow], [hmi_gate2_DI], [hmi_gate2_DO]," +
                " [hmi_gate3_opening], [hmi_gate3_outflow], [hmi_gate3_DI], [hmi_gate3_DO], [hmi_" +
                "spillways_outflow], [hmi_intake_outflow], [hmi_total_outflow], [control_gate1_op" +
                "ening], [control_gate2_opening], [control_gate3_opening]) VALUES (@time, @real_w" +
                "ater_level, @real_storage, @real_storage_difference, @real_total_inflow, @real_g" +
                "ate1_opening, @real_gate1_outflow, @real_gate1_DI, @real_gate1_DO, @real_gate2_o" +
                "pening, @real_gate2_outflow, @real_gate2_DI, @real_gate2_DO, @real_gate3_opening" +
                ", @real_gate3_outflow, @real_gate3_DI, @real_gate3_DO, @real_spillways_outflow, " +
                "@real_intake_outflow, @real_total_outflow, @hmi_storage, @hmi_storage_difference" +
                ", @hmi_total_inflow, @hmi_gate1_opening, @hmi_gate1_outflow, @hmi_gate1_DI, @hmi" +
                "_gate1_DO, @hmi_gate2_opening, @hmi_gate2_outflow, @hmi_gate2_DI, @hmi_gate2_DO," +
                " @hmi_gate3_opening, @hmi_gate3_outflow, @hmi_gate3_DI, @hmi_gate3_DO, @hmi_spil" +
                "lways_outflow, @hmi_intake_outflow, @hmi_total_outflow, @control_gate1_opening, " +
                "@control_gate2_opening, @control_gate3_opening);\r\nSELECT id, time, real_water_le" +
                "vel, real_storage, real_storage_difference, real_total_inflow, real_gate1_openin" +
                "g, real_gate1_outflow, real_gate1_DI, real_gate1_DO, real_gate2_opening, real_ga" +
                "te2_outflow, real_gate2_DI, real_gate2_DO, real_gate3_opening, real_gate3_outflo" +
                "w, real_gate3_DI, real_gate3_DO, real_spillways_outflow, real_intake_outflow, re" +
                "al_total_outflow, hmi_storage, hmi_storage_difference, hmi_total_inflow, hmi_gat" +
                "e1_opening, hmi_gate1_outflow, hmi_gate1_DI, hmi_gate1_DO, hmi_gate2_opening, hm" +
                "i_gate2_outflow, hmi_gate2_DI, hmi_gate2_DO, hmi_gate3_opening, hmi_gate3_outflo" +
                "w, hmi_gate3_DI, hmi_gate3_DO, hmi_spillways_outflow, hmi_intake_outflow, hmi_to" +
                "tal_outflow, control_gate1_opening, control_gate2_opening, control_gate3_opening" +
                " FROM Dam_Status_Log WHERE (id = SCOPE_IDENTITY()) AND (time = @time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_water_level", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_water_level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_storage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_storage_difference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage_difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_total_inflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_inflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate1_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate1_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate1_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate2_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate2_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate2_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate3_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate3_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate3_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_spillways_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_spillways_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_intake_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_intake_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_total_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_storage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_storage_difference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage_difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_total_inflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_inflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate1_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate1_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate1_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate2_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate2_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate2_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate3_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate3_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate3_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_spillways_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_spillways_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_intake_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_intake_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_total_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@control_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate1_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@control_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate2_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@control_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate3_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Dam_Status_Log] SET [time] = @time, [real_water_level] = @real_wate" +
                "r_level, [real_storage] = @real_storage, [real_storage_difference] = @real_stora" +
                "ge_difference, [real_total_inflow] = @real_total_inflow, [real_gate1_opening] = " +
                "@real_gate1_opening, [real_gate1_outflow] = @real_gate1_outflow, [real_gate1_DI]" +
                " = @real_gate1_DI, [real_gate1_DO] = @real_gate1_DO, [real_gate2_opening] = @rea" +
                "l_gate2_opening, [real_gate2_outflow] = @real_gate2_outflow, [real_gate2_DI] = @" +
                "real_gate2_DI, [real_gate2_DO] = @real_gate2_DO, [real_gate3_opening] = @real_ga" +
                "te3_opening, [real_gate3_outflow] = @real_gate3_outflow, [real_gate3_DI] = @real" +
                "_gate3_DI, [real_gate3_DO] = @real_gate3_DO, [real_spillways_outflow] = @real_sp" +
                "illways_outflow, [real_intake_outflow] = @real_intake_outflow, [real_total_outfl" +
                "ow] = @real_total_outflow, [hmi_storage] = @hmi_storage, [hmi_storage_difference" +
                "] = @hmi_storage_difference, [hmi_total_inflow] = @hmi_total_inflow, [hmi_gate1_" +
                "opening] = @hmi_gate1_opening, [hmi_gate1_outflow] = @hmi_gate1_outflow, [hmi_ga" +
                "te1_DI] = @hmi_gate1_DI, [hmi_gate1_DO] = @hmi_gate1_DO, [hmi_gate2_opening] = @" +
                "hmi_gate2_opening, [hmi_gate2_outflow] = @hmi_gate2_outflow, [hmi_gate2_DI] = @h" +
                "mi_gate2_DI, [hmi_gate2_DO] = @hmi_gate2_DO, [hmi_gate3_opening] = @hmi_gate3_op" +
                "ening, [hmi_gate3_outflow] = @hmi_gate3_outflow, [hmi_gate3_DI] = @hmi_gate3_DI," +
                " [hmi_gate3_DO] = @hmi_gate3_DO, [hmi_spillways_outflow] = @hmi_spillways_outflo" +
                "w, [hmi_intake_outflow] = @hmi_intake_outflow, [hmi_total_outflow] = @hmi_total_" +
                "outflow, [control_gate1_opening] = @control_gate1_opening, [control_gate2_openin" +
                "g] = @control_gate2_opening, [control_gate3_opening] = @control_gate3_opening WH" +
                "ERE (([id] = @Original_id) AND ([time] = @Original_time) AND ((@IsNull_real_wate" +
                "r_level = 1 AND [real_water_level] IS NULL) OR ([real_water_level] = @Original_r" +
                "eal_water_level)) AND ((@IsNull_real_storage = 1 AND [real_storage] IS NULL) OR " +
                "([real_storage] = @Original_real_storage)) AND ((@IsNull_real_storage_difference" +
                " = 1 AND [real_storage_difference] IS NULL) OR ([real_storage_difference] = @Ori" +
                "ginal_real_storage_difference)) AND ((@IsNull_real_total_inflow = 1 AND [real_to" +
                "tal_inflow] IS NULL) OR ([real_total_inflow] = @Original_real_total_inflow)) AND" +
                " ((@IsNull_real_gate1_opening = 1 AND [real_gate1_opening] IS NULL) OR ([real_ga" +
                "te1_opening] = @Original_real_gate1_opening)) AND ((@IsNull_real_gate1_outflow =" +
                " 1 AND [real_gate1_outflow] IS NULL) OR ([real_gate1_outflow] = @Original_real_g" +
                "ate1_outflow)) AND ((@IsNull_real_gate1_DI = 1 AND [real_gate1_DI] IS NULL) OR (" +
                "[real_gate1_DI] = @Original_real_gate1_DI)) AND ((@IsNull_real_gate1_DO = 1 AND " +
                "[real_gate1_DO] IS NULL) OR ([real_gate1_DO] = @Original_real_gate1_DO)) AND ((@" +
                "IsNull_real_gate2_opening = 1 AND [real_gate2_opening] IS NULL) OR ([real_gate2_" +
                "opening] = @Original_real_gate2_opening)) AND ((@IsNull_real_gate2_outflow = 1 A" +
                "ND [real_gate2_outflow] IS NULL) OR ([real_gate2_outflow] = @Original_real_gate2" +
                "_outflow)) AND ((@IsNull_real_gate2_DI = 1 AND [real_gate2_DI] IS NULL) OR ([rea" +
                "l_gate2_DI] = @Original_real_gate2_DI)) AND ((@IsNull_real_gate2_DO = 1 AND [rea" +
                "l_gate2_DO] IS NULL) OR ([real_gate2_DO] = @Original_real_gate2_DO)) AND ((@IsNu" +
                "ll_real_gate3_opening = 1 AND [real_gate3_opening] IS NULL) OR ([real_gate3_open" +
                "ing] = @Original_real_gate3_opening)) AND ((@IsNull_real_gate3_outflow = 1 AND [" +
                "real_gate3_outflow] IS NULL) OR ([real_gate3_outflow] = @Original_real_gate3_out" +
                "flow)) AND ((@IsNull_real_gate3_DI = 1 AND [real_gate3_DI] IS NULL) OR ([real_ga" +
                "te3_DI] = @Original_real_gate3_DI)) AND ((@IsNull_real_gate3_DO = 1 AND [real_ga" +
                "te3_DO] IS NULL) OR ([real_gate3_DO] = @Original_real_gate3_DO)) AND ((@IsNull_r" +
                "eal_spillways_outflow = 1 AND [real_spillways_outflow] IS NULL) OR ([real_spillw" +
                "ays_outflow] = @Original_real_spillways_outflow)) AND ((@IsNull_real_intake_outf" +
                "low = 1 AND [real_intake_outflow] IS NULL) OR ([real_intake_outflow] = @Original" +
                "_real_intake_outflow)) AND ((@IsNull_real_total_outflow = 1 AND [real_total_outf" +
                "low] IS NULL) OR ([real_total_outflow] = @Original_real_total_outflow)) AND ((@I" +
                "sNull_hmi_storage = 1 AND [hmi_storage] IS NULL) OR ([hmi_storage] = @Original_h" +
                "mi_storage)) AND ((@IsNull_hmi_storage_difference = 1 AND [hmi_storage_differenc" +
                "e] IS NULL) OR ([hmi_storage_difference] = @Original_hmi_storage_difference)) AN" +
                "D ((@IsNull_hmi_total_inflow = 1 AND [hmi_total_inflow] IS NULL) OR ([hmi_total_" +
                "inflow] = @Original_hmi_total_inflow)) AND ((@IsNull_hmi_gate1_opening = 1 AND [" +
                "hmi_gate1_opening] IS NULL) OR ([hmi_gate1_opening] = @Original_hmi_gate1_openin" +
                "g)) AND ((@IsNull_hmi_gate1_outflow = 1 AND [hmi_gate1_outflow] IS NULL) OR ([hm" +
                "i_gate1_outflow] = @Original_hmi_gate1_outflow)) AND ((@IsNull_hmi_gate1_DI = 1 " +
                "AND [hmi_gate1_DI] IS NULL) OR ([hmi_gate1_DI] = @Original_hmi_gate1_DI)) AND ((" +
                "@IsNull_hmi_gate1_DO = 1 AND [hmi_gate1_DO] IS NULL) OR ([hmi_gate1_DO] = @Origi" +
                "nal_hmi_gate1_DO)) AND ((@IsNull_hmi_gate2_opening = 1 AND [hmi_gate2_opening] I" +
                "S NULL) OR ([hmi_gate2_opening] = @Original_hmi_gate2_opening)) AND ((@IsNull_hm" +
                "i_gate2_outflow = 1 AND [hmi_gate2_outflow] IS NULL) OR ([hmi_gate2_outflow] = @" +
                "Original_hmi_gate2_outflow)) AND ((@IsNull_hmi_gate2_DI = 1 AND [hmi_gate2_DI] I" +
                "S NULL) OR ([hmi_gate2_DI] = @Original_hmi_gate2_DI)) AND ((@IsNull_hmi_gate2_DO" +
                " = 1 AND [hmi_gate2_DO] IS NULL) OR ([hmi_gate2_DO] = @Original_hmi_gate2_DO)) A" +
                "ND ((@IsNull_hmi_gate3_opening = 1 AND [hmi_gate3_opening] IS NULL) OR ([hmi_gat" +
                "e3_opening] = @Original_hmi_gate3_opening)) AND ((@IsNull_hmi_gate3_outflow = 1 " +
                "AND [hmi_gate3_outflow] IS NULL) OR ([hmi_gate3_outflow] = @Original_hmi_gate3_o" +
                "utflow)) AND ((@IsNull_hmi_gate3_DI = 1 AND [hmi_gate3_DI] IS NULL) OR ([hmi_gat" +
                "e3_DI] = @Original_hmi_gate3_DI)) AND ((@IsNull_hmi_gate3_DO = 1 AND [hmi_gate3_" +
                "DO] IS NULL) OR ([hmi_gate3_DO] = @Original_hmi_gate3_DO)) AND ((@IsNull_hmi_spi" +
                "llways_outflow = 1 AND [hmi_spillways_outflow] IS NULL) OR ([hmi_spillways_outfl" +
                "ow] = @Original_hmi_spillways_outflow)) AND ((@IsNull_hmi_intake_outflow = 1 AND" +
                " [hmi_intake_outflow] IS NULL) OR ([hmi_intake_outflow] = @Original_hmi_intake_o" +
                "utflow)) AND ((@IsNull_hmi_total_outflow = 1 AND [hmi_total_outflow] IS NULL) OR" +
                " ([hmi_total_outflow] = @Original_hmi_total_outflow)) AND ((@IsNull_control_gate" +
                "1_opening = 1 AND [control_gate1_opening] IS NULL) OR ([control_gate1_opening] =" +
                " @Original_control_gate1_opening)) AND ((@IsNull_control_gate2_opening = 1 AND [" +
                "control_gate2_opening] IS NULL) OR ([control_gate2_opening] = @Original_control_" +
                "gate2_opening)) AND ((@IsNull_control_gate3_opening = 1 AND [control_gate3_openi" +
                "ng] IS NULL) OR ([control_gate3_opening] = @Original_control_gate3_opening)));\r\n" +
                "SELECT id, time, real_water_level, real_storage, real_storage_difference, real_t" +
                "otal_inflow, real_gate1_opening, real_gate1_outflow, real_gate1_DI, real_gate1_D" +
                "O, real_gate2_opening, real_gate2_outflow, real_gate2_DI, real_gate2_DO, real_ga" +
                "te3_opening, real_gate3_outflow, real_gate3_DI, real_gate3_DO, real_spillways_ou" +
                "tflow, real_intake_outflow, real_total_outflow, hmi_storage, hmi_storage_differe" +
                "nce, hmi_total_inflow, hmi_gate1_opening, hmi_gate1_outflow, hmi_gate1_DI, hmi_g" +
                "ate1_DO, hmi_gate2_opening, hmi_gate2_outflow, hmi_gate2_DI, hmi_gate2_DO, hmi_g" +
                "ate3_opening, hmi_gate3_outflow, hmi_gate3_DI, hmi_gate3_DO, hmi_spillways_outfl" +
                "ow, hmi_intake_outflow, hmi_total_outflow, control_gate1_opening, control_gate2_" +
                "opening, control_gate3_opening FROM Dam_Status_Log WHERE (id = @id) AND (time = " +
                "@time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@time", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_water_level", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_water_level", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_storage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_storage_difference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage_difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_total_inflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_inflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate1_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate1_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate1_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate2_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate2_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate2_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate3_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate3_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_gate3_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_spillways_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_spillways_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_intake_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_intake_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@real_total_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_storage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_storage_difference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage_difference", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_total_inflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_inflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate1_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate1_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate1_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate2_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate2_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate2_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate3_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate3_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_gate3_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_spillways_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_spillways_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_intake_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_intake_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hmi_total_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_outflow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@control_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate1_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@control_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate2_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@control_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate3_opening", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_time", global::System.Data.SqlDbType.DateTime2, 0, global::System.Data.ParameterDirection.Input, 0, 0, "time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_water_level", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_water_level", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_water_level", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_water_level", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_storage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_storage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_storage_difference", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage_difference", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_storage_difference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_storage_difference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_total_inflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_inflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_total_inflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_inflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate1_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate1_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate1_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate1_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate1_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate1_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate1_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate1_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate2_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate2_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate2_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate2_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate2_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate2_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate2_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate2_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate3_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate3_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate3_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate3_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate3_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_gate3_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_gate3_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_gate3_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_spillways_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_spillways_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_spillways_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_spillways_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_intake_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_intake_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_intake_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_intake_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_real_total_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_real_total_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "real_total_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_storage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_storage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_storage_difference", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage_difference", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_storage_difference", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_storage_difference", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_total_inflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_inflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_total_inflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_inflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate1_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate1_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate1_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate1_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate1_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate1_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate1_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate1_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate2_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate2_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate2_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate2_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate2_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate2_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate2_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate2_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate3_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate3_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate3_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate3_DI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate3_DI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_gate3_DO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_gate3_DO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_gate3_DO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_spillways_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_spillways_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_spillways_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_spillways_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_intake_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_intake_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_intake_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_intake_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hmi_total_outflow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_outflow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hmi_total_outflow", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hmi_total_outflow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_control_gate1_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate1_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_control_gate1_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate1_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_control_gate2_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate2_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_control_gate2_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate2_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_control_gate3_opening", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate3_opening", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_control_gate3_opening", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "control_gate3_opening", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Searching_App.Properties.Settings.Default.CANSDamTestbedDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT id, time, real_water_level, real_storage, real_storage_difference, real_total_inflow, real_gate1_opening, real_gate1_outflow, real_gate1_DI, real_gate1_DO, real_gate2_opening, real_gate2_outflow, real_gate2_DI, real_gate2_DO, real_gate3_opening, real_gate3_outflow, real_gate3_DI, real_gate3_DO, real_spillways_outflow, real_intake_outflow, real_total_outflow, hmi_storage, hmi_storage_difference, hmi_total_inflow, hmi_gate1_opening, hmi_gate1_outflow, hmi_gate1_DI, hmi_gate1_DO, hmi_gate2_opening, hmi_gate2_outflow, hmi_gate2_DI, hmi_gate2_DO, hmi_gate3_opening, hmi_gate3_outflow, hmi_gate3_DI, hmi_gate3_DO, hmi_spillways_outflow, hmi_intake_outflow, hmi_total_outflow, control_gate1_opening, control_gate2_opening, control_gate3_opening FROM dbo.Dam_Status_Log";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(CANSDamTestbedDBDataSet.Dam_Status_LogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual CANSDamTestbedDBDataSet.Dam_Status_LogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            CANSDamTestbedDBDataSet.Dam_Status_LogDataTable dataTable = new CANSDamTestbedDBDataSet.Dam_Status_LogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CANSDamTestbedDBDataSet.Dam_Status_LogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(CANSDamTestbedDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Dam_Status_Log");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_id, 
                    System.DateTime Original_time, 
                    global::System.Nullable<double> Original_real_water_level, 
                    global::System.Nullable<double> Original_real_storage, 
                    global::System.Nullable<double> Original_real_storage_difference, 
                    global::System.Nullable<double> Original_real_total_inflow, 
                    global::System.Nullable<double> Original_real_gate1_opening, 
                    global::System.Nullable<double> Original_real_gate1_outflow, 
                    global::System.Nullable<bool> Original_real_gate1_DI, 
                    global::System.Nullable<bool> Original_real_gate1_DO, 
                    global::System.Nullable<double> Original_real_gate2_opening, 
                    global::System.Nullable<double> Original_real_gate2_outflow, 
                    global::System.Nullable<bool> Original_real_gate2_DI, 
                    global::System.Nullable<bool> Original_real_gate2_DO, 
                    global::System.Nullable<double> Original_real_gate3_opening, 
                    global::System.Nullable<double> Original_real_gate3_outflow, 
                    global::System.Nullable<bool> Original_real_gate3_DI, 
                    global::System.Nullable<bool> Original_real_gate3_DO, 
                    global::System.Nullable<double> Original_real_spillways_outflow, 
                    global::System.Nullable<double> Original_real_intake_outflow, 
                    global::System.Nullable<double> Original_real_total_outflow, 
                    global::System.Nullable<double> Original_hmi_storage, 
                    global::System.Nullable<double> Original_hmi_storage_difference, 
                    global::System.Nullable<double> Original_hmi_total_inflow, 
                    global::System.Nullable<double> Original_hmi_gate1_opening, 
                    global::System.Nullable<double> Original_hmi_gate1_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate1_DI, 
                    global::System.Nullable<bool> Original_hmi_gate1_DO, 
                    global::System.Nullable<double> Original_hmi_gate2_opening, 
                    global::System.Nullable<double> Original_hmi_gate2_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate2_DI, 
                    global::System.Nullable<bool> Original_hmi_gate2_DO, 
                    global::System.Nullable<double> Original_hmi_gate3_opening, 
                    global::System.Nullable<double> Original_hmi_gate3_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate3_DI, 
                    global::System.Nullable<bool> Original_hmi_gate3_DO, 
                    global::System.Nullable<double> Original_hmi_spillways_outflow, 
                    global::System.Nullable<double> Original_hmi_intake_outflow, 
                    global::System.Nullable<double> Original_hmi_total_outflow, 
                    global::System.Nullable<double> Original_control_gate1_opening, 
                    global::System.Nullable<double> Original_control_gate2_opening, 
                    global::System.Nullable<double> Original_control_gate3_opening) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_time));
            if ((Original_real_water_level.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_real_water_level.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_real_storage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_real_storage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_real_storage_difference.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_real_storage_difference.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_real_total_inflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_real_total_inflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate1_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_real_gate1_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate1_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_real_gate1_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate1_DI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_real_gate1_DI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate1_DO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_real_gate1_DO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate2_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_real_gate2_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate2_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_real_gate2_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate2_DI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((bool)(Original_real_gate2_DI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate2_DO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_real_gate2_DO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate3_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_real_gate3_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate3_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_real_gate3_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate3_DI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((bool)(Original_real_gate3_DI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate3_DO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((bool)(Original_real_gate3_DO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_real_spillways_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((double)(Original_real_spillways_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_real_intake_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_real_intake_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_real_total_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((double)(Original_real_total_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_storage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((double)(Original_hmi_storage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_storage_difference.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((double)(Original_hmi_storage_difference.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_total_inflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((double)(Original_hmi_total_inflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate1_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((double)(Original_hmi_gate1_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate1_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((double)(Original_hmi_gate1_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate1_DI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((bool)(Original_hmi_gate1_DI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate1_DO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((bool)(Original_hmi_gate1_DO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate2_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((double)(Original_hmi_gate2_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate2_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((double)(Original_hmi_gate2_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate2_DI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((bool)(Original_hmi_gate2_DI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate2_DO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((bool)(Original_hmi_gate2_DO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate3_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((double)(Original_hmi_gate3_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate3_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((double)(Original_hmi_gate3_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate3_DI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((bool)(Original_hmi_gate3_DI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate3_DO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((bool)(Original_hmi_gate3_DO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_spillways_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((double)(Original_hmi_spillways_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_intake_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((double)(Original_hmi_intake_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_total_outflow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((double)(Original_hmi_total_outflow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_control_gate1_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((double)(Original_control_gate1_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_control_gate2_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((double)(Original_control_gate2_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_control_gate3_opening.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((double)(Original_control_gate3_opening.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime time, 
                    global::System.Nullable<double> real_water_level, 
                    global::System.Nullable<double> real_storage, 
                    global::System.Nullable<double> real_storage_difference, 
                    global::System.Nullable<double> real_total_inflow, 
                    global::System.Nullable<double> real_gate1_opening, 
                    global::System.Nullable<double> real_gate1_outflow, 
                    global::System.Nullable<bool> real_gate1_DI, 
                    global::System.Nullable<bool> real_gate1_DO, 
                    global::System.Nullable<double> real_gate2_opening, 
                    global::System.Nullable<double> real_gate2_outflow, 
                    global::System.Nullable<bool> real_gate2_DI, 
                    global::System.Nullable<bool> real_gate2_DO, 
                    global::System.Nullable<double> real_gate3_opening, 
                    global::System.Nullable<double> real_gate3_outflow, 
                    global::System.Nullable<bool> real_gate3_DI, 
                    global::System.Nullable<bool> real_gate3_DO, 
                    global::System.Nullable<double> real_spillways_outflow, 
                    global::System.Nullable<double> real_intake_outflow, 
                    global::System.Nullable<double> real_total_outflow, 
                    global::System.Nullable<double> hmi_storage, 
                    global::System.Nullable<double> hmi_storage_difference, 
                    global::System.Nullable<double> hmi_total_inflow, 
                    global::System.Nullable<double> hmi_gate1_opening, 
                    global::System.Nullable<double> hmi_gate1_outflow, 
                    global::System.Nullable<bool> hmi_gate1_DI, 
                    global::System.Nullable<bool> hmi_gate1_DO, 
                    global::System.Nullable<double> hmi_gate2_opening, 
                    global::System.Nullable<double> hmi_gate2_outflow, 
                    global::System.Nullable<bool> hmi_gate2_DI, 
                    global::System.Nullable<bool> hmi_gate2_DO, 
                    global::System.Nullable<double> hmi_gate3_opening, 
                    global::System.Nullable<double> hmi_gate3_outflow, 
                    global::System.Nullable<bool> hmi_gate3_DI, 
                    global::System.Nullable<bool> hmi_gate3_DO, 
                    global::System.Nullable<double> hmi_spillways_outflow, 
                    global::System.Nullable<double> hmi_intake_outflow, 
                    global::System.Nullable<double> hmi_total_outflow, 
                    global::System.Nullable<double> control_gate1_opening, 
                    global::System.Nullable<double> control_gate2_opening, 
                    global::System.Nullable<double> control_gate3_opening) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(time));
            if ((real_water_level.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(real_water_level.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((real_storage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(real_storage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((real_storage_difference.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(real_storage_difference.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((real_total_inflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(real_total_inflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((real_gate1_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(real_gate1_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((real_gate1_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(real_gate1_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((real_gate1_DI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(real_gate1_DI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((real_gate1_DO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(real_gate1_DO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((real_gate2_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(real_gate2_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((real_gate2_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(real_gate2_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((real_gate2_DI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(real_gate2_DI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((real_gate2_DO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(real_gate2_DO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((real_gate3_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(real_gate3_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((real_gate3_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(real_gate3_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((real_gate3_DI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(real_gate3_DI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((real_gate3_DO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(real_gate3_DO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((real_spillways_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(real_spillways_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((real_intake_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(real_intake_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((real_total_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(real_total_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((hmi_storage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(hmi_storage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((hmi_storage_difference.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(hmi_storage_difference.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((hmi_total_inflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(hmi_total_inflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate1_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(hmi_gate1_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate1_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(hmi_gate1_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate1_DI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(hmi_gate1_DI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate1_DO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(hmi_gate1_DO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate2_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(hmi_gate2_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate2_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(hmi_gate2_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate2_DI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(hmi_gate2_DI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate2_DO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(hmi_gate2_DO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate3_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(hmi_gate3_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate3_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(hmi_gate3_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate3_DI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(hmi_gate3_DI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate3_DO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(hmi_gate3_DO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((hmi_spillways_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(hmi_spillways_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((hmi_intake_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(hmi_intake_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((hmi_total_outflow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(hmi_total_outflow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((control_gate1_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(control_gate1_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((control_gate2_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(control_gate2_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((control_gate3_opening.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(control_gate3_opening.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime time, 
                    global::System.Nullable<double> real_water_level, 
                    global::System.Nullable<double> real_storage, 
                    global::System.Nullable<double> real_storage_difference, 
                    global::System.Nullable<double> real_total_inflow, 
                    global::System.Nullable<double> real_gate1_opening, 
                    global::System.Nullable<double> real_gate1_outflow, 
                    global::System.Nullable<bool> real_gate1_DI, 
                    global::System.Nullable<bool> real_gate1_DO, 
                    global::System.Nullable<double> real_gate2_opening, 
                    global::System.Nullable<double> real_gate2_outflow, 
                    global::System.Nullable<bool> real_gate2_DI, 
                    global::System.Nullable<bool> real_gate2_DO, 
                    global::System.Nullable<double> real_gate3_opening, 
                    global::System.Nullable<double> real_gate3_outflow, 
                    global::System.Nullable<bool> real_gate3_DI, 
                    global::System.Nullable<bool> real_gate3_DO, 
                    global::System.Nullable<double> real_spillways_outflow, 
                    global::System.Nullable<double> real_intake_outflow, 
                    global::System.Nullable<double> real_total_outflow, 
                    global::System.Nullable<double> hmi_storage, 
                    global::System.Nullable<double> hmi_storage_difference, 
                    global::System.Nullable<double> hmi_total_inflow, 
                    global::System.Nullable<double> hmi_gate1_opening, 
                    global::System.Nullable<double> hmi_gate1_outflow, 
                    global::System.Nullable<bool> hmi_gate1_DI, 
                    global::System.Nullable<bool> hmi_gate1_DO, 
                    global::System.Nullable<double> hmi_gate2_opening, 
                    global::System.Nullable<double> hmi_gate2_outflow, 
                    global::System.Nullable<bool> hmi_gate2_DI, 
                    global::System.Nullable<bool> hmi_gate2_DO, 
                    global::System.Nullable<double> hmi_gate3_opening, 
                    global::System.Nullable<double> hmi_gate3_outflow, 
                    global::System.Nullable<bool> hmi_gate3_DI, 
                    global::System.Nullable<bool> hmi_gate3_DO, 
                    global::System.Nullable<double> hmi_spillways_outflow, 
                    global::System.Nullable<double> hmi_intake_outflow, 
                    global::System.Nullable<double> hmi_total_outflow, 
                    global::System.Nullable<double> control_gate1_opening, 
                    global::System.Nullable<double> control_gate2_opening, 
                    global::System.Nullable<double> control_gate3_opening, 
                    int Original_id, 
                    System.DateTime Original_time, 
                    global::System.Nullable<double> Original_real_water_level, 
                    global::System.Nullable<double> Original_real_storage, 
                    global::System.Nullable<double> Original_real_storage_difference, 
                    global::System.Nullable<double> Original_real_total_inflow, 
                    global::System.Nullable<double> Original_real_gate1_opening, 
                    global::System.Nullable<double> Original_real_gate1_outflow, 
                    global::System.Nullable<bool> Original_real_gate1_DI, 
                    global::System.Nullable<bool> Original_real_gate1_DO, 
                    global::System.Nullable<double> Original_real_gate2_opening, 
                    global::System.Nullable<double> Original_real_gate2_outflow, 
                    global::System.Nullable<bool> Original_real_gate2_DI, 
                    global::System.Nullable<bool> Original_real_gate2_DO, 
                    global::System.Nullable<double> Original_real_gate3_opening, 
                    global::System.Nullable<double> Original_real_gate3_outflow, 
                    global::System.Nullable<bool> Original_real_gate3_DI, 
                    global::System.Nullable<bool> Original_real_gate3_DO, 
                    global::System.Nullable<double> Original_real_spillways_outflow, 
                    global::System.Nullable<double> Original_real_intake_outflow, 
                    global::System.Nullable<double> Original_real_total_outflow, 
                    global::System.Nullable<double> Original_hmi_storage, 
                    global::System.Nullable<double> Original_hmi_storage_difference, 
                    global::System.Nullable<double> Original_hmi_total_inflow, 
                    global::System.Nullable<double> Original_hmi_gate1_opening, 
                    global::System.Nullable<double> Original_hmi_gate1_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate1_DI, 
                    global::System.Nullable<bool> Original_hmi_gate1_DO, 
                    global::System.Nullable<double> Original_hmi_gate2_opening, 
                    global::System.Nullable<double> Original_hmi_gate2_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate2_DI, 
                    global::System.Nullable<bool> Original_hmi_gate2_DO, 
                    global::System.Nullable<double> Original_hmi_gate3_opening, 
                    global::System.Nullable<double> Original_hmi_gate3_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate3_DI, 
                    global::System.Nullable<bool> Original_hmi_gate3_DO, 
                    global::System.Nullable<double> Original_hmi_spillways_outflow, 
                    global::System.Nullable<double> Original_hmi_intake_outflow, 
                    global::System.Nullable<double> Original_hmi_total_outflow, 
                    global::System.Nullable<double> Original_control_gate1_opening, 
                    global::System.Nullable<double> Original_control_gate2_opening, 
                    global::System.Nullable<double> Original_control_gate3_opening, 
                    int id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(time));
            if ((real_water_level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(real_water_level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((real_storage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(real_storage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((real_storage_difference.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(real_storage_difference.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((real_total_inflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(real_total_inflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((real_gate1_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(real_gate1_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((real_gate1_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(real_gate1_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((real_gate1_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(real_gate1_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((real_gate1_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(real_gate1_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((real_gate2_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(real_gate2_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((real_gate2_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(real_gate2_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((real_gate2_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(real_gate2_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((real_gate2_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(real_gate2_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((real_gate3_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(real_gate3_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((real_gate3_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(real_gate3_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((real_gate3_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(real_gate3_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((real_gate3_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(real_gate3_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((real_spillways_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(real_spillways_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((real_intake_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(real_intake_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((real_total_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(real_total_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((hmi_storage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(hmi_storage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((hmi_storage_difference.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(hmi_storage_difference.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((hmi_total_inflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(hmi_total_inflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate1_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(hmi_gate1_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate1_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(hmi_gate1_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate1_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(hmi_gate1_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate1_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(hmi_gate1_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate2_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(hmi_gate2_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate2_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(hmi_gate2_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate2_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(hmi_gate2_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate2_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(hmi_gate2_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate3_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(hmi_gate3_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate3_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(hmi_gate3_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate3_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(hmi_gate3_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((hmi_gate3_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(hmi_gate3_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((hmi_spillways_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(hmi_spillways_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((hmi_intake_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(hmi_intake_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((hmi_total_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(hmi_total_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((control_gate1_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(control_gate1_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((control_gate2_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(control_gate2_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((control_gate3_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(control_gate3_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(Original_time));
            if ((Original_real_water_level.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(Original_real_water_level.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_real_storage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_real_storage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_real_storage_difference.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(Original_real_storage_difference.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_real_total_inflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_real_total_inflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate1_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_real_gate1_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate1_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_real_gate1_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate1_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_real_gate1_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate1_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_real_gate1_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate2_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_real_gate2_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate2_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(Original_real_gate2_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate2_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_real_gate2_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate2_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Original_real_gate2_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate3_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(Original_real_gate3_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate3_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((double)(Original_real_gate3_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate3_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Original_real_gate3_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_real_gate3_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(Original_real_gate3_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_real_spillways_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(Original_real_spillways_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_real_intake_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((double)(Original_real_intake_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_real_total_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((double)(Original_real_total_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_storage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((double)(Original_hmi_storage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_storage_difference.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((double)(Original_hmi_storage_difference.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_total_inflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((double)(Original_hmi_total_inflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate1_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((double)(Original_hmi_gate1_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate1_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((double)(Original_hmi_gate1_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate1_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((bool)(Original_hmi_gate1_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate1_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((bool)(Original_hmi_gate1_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate2_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((double)(Original_hmi_gate2_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate2_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((double)(Original_hmi_gate2_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate2_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(Original_hmi_gate2_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate2_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((bool)(Original_hmi_gate2_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate3_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((double)(Original_hmi_gate3_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate3_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((double)(Original_hmi_gate3_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate3_DI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((bool)(Original_hmi_gate3_DI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_gate3_DO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((bool)(Original_hmi_gate3_DO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_spillways_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((double)(Original_hmi_spillways_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_intake_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((double)(Original_hmi_intake_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_hmi_total_outflow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((double)(Original_hmi_total_outflow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_control_gate1_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((double)(Original_control_gate1_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_control_gate2_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((double)(Original_control_gate2_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_control_gate3_opening.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((double)(Original_control_gate3_opening.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[123].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> real_water_level, 
                    global::System.Nullable<double> real_storage, 
                    global::System.Nullable<double> real_storage_difference, 
                    global::System.Nullable<double> real_total_inflow, 
                    global::System.Nullable<double> real_gate1_opening, 
                    global::System.Nullable<double> real_gate1_outflow, 
                    global::System.Nullable<bool> real_gate1_DI, 
                    global::System.Nullable<bool> real_gate1_DO, 
                    global::System.Nullable<double> real_gate2_opening, 
                    global::System.Nullable<double> real_gate2_outflow, 
                    global::System.Nullable<bool> real_gate2_DI, 
                    global::System.Nullable<bool> real_gate2_DO, 
                    global::System.Nullable<double> real_gate3_opening, 
                    global::System.Nullable<double> real_gate3_outflow, 
                    global::System.Nullable<bool> real_gate3_DI, 
                    global::System.Nullable<bool> real_gate3_DO, 
                    global::System.Nullable<double> real_spillways_outflow, 
                    global::System.Nullable<double> real_intake_outflow, 
                    global::System.Nullable<double> real_total_outflow, 
                    global::System.Nullable<double> hmi_storage, 
                    global::System.Nullable<double> hmi_storage_difference, 
                    global::System.Nullable<double> hmi_total_inflow, 
                    global::System.Nullable<double> hmi_gate1_opening, 
                    global::System.Nullable<double> hmi_gate1_outflow, 
                    global::System.Nullable<bool> hmi_gate1_DI, 
                    global::System.Nullable<bool> hmi_gate1_DO, 
                    global::System.Nullable<double> hmi_gate2_opening, 
                    global::System.Nullable<double> hmi_gate2_outflow, 
                    global::System.Nullable<bool> hmi_gate2_DI, 
                    global::System.Nullable<bool> hmi_gate2_DO, 
                    global::System.Nullable<double> hmi_gate3_opening, 
                    global::System.Nullable<double> hmi_gate3_outflow, 
                    global::System.Nullable<bool> hmi_gate3_DI, 
                    global::System.Nullable<bool> hmi_gate3_DO, 
                    global::System.Nullable<double> hmi_spillways_outflow, 
                    global::System.Nullable<double> hmi_intake_outflow, 
                    global::System.Nullable<double> hmi_total_outflow, 
                    global::System.Nullable<double> control_gate1_opening, 
                    global::System.Nullable<double> control_gate2_opening, 
                    global::System.Nullable<double> control_gate3_opening, 
                    int Original_id, 
                    System.DateTime Original_time, 
                    global::System.Nullable<double> Original_real_water_level, 
                    global::System.Nullable<double> Original_real_storage, 
                    global::System.Nullable<double> Original_real_storage_difference, 
                    global::System.Nullable<double> Original_real_total_inflow, 
                    global::System.Nullable<double> Original_real_gate1_opening, 
                    global::System.Nullable<double> Original_real_gate1_outflow, 
                    global::System.Nullable<bool> Original_real_gate1_DI, 
                    global::System.Nullable<bool> Original_real_gate1_DO, 
                    global::System.Nullable<double> Original_real_gate2_opening, 
                    global::System.Nullable<double> Original_real_gate2_outflow, 
                    global::System.Nullable<bool> Original_real_gate2_DI, 
                    global::System.Nullable<bool> Original_real_gate2_DO, 
                    global::System.Nullable<double> Original_real_gate3_opening, 
                    global::System.Nullable<double> Original_real_gate3_outflow, 
                    global::System.Nullable<bool> Original_real_gate3_DI, 
                    global::System.Nullable<bool> Original_real_gate3_DO, 
                    global::System.Nullable<double> Original_real_spillways_outflow, 
                    global::System.Nullable<double> Original_real_intake_outflow, 
                    global::System.Nullable<double> Original_real_total_outflow, 
                    global::System.Nullable<double> Original_hmi_storage, 
                    global::System.Nullable<double> Original_hmi_storage_difference, 
                    global::System.Nullable<double> Original_hmi_total_inflow, 
                    global::System.Nullable<double> Original_hmi_gate1_opening, 
                    global::System.Nullable<double> Original_hmi_gate1_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate1_DI, 
                    global::System.Nullable<bool> Original_hmi_gate1_DO, 
                    global::System.Nullable<double> Original_hmi_gate2_opening, 
                    global::System.Nullable<double> Original_hmi_gate2_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate2_DI, 
                    global::System.Nullable<bool> Original_hmi_gate2_DO, 
                    global::System.Nullable<double> Original_hmi_gate3_opening, 
                    global::System.Nullable<double> Original_hmi_gate3_outflow, 
                    global::System.Nullable<bool> Original_hmi_gate3_DI, 
                    global::System.Nullable<bool> Original_hmi_gate3_DO, 
                    global::System.Nullable<double> Original_hmi_spillways_outflow, 
                    global::System.Nullable<double> Original_hmi_intake_outflow, 
                    global::System.Nullable<double> Original_hmi_total_outflow, 
                    global::System.Nullable<double> Original_control_gate1_opening, 
                    global::System.Nullable<double> Original_control_gate2_opening, 
                    global::System.Nullable<double> Original_control_gate3_opening) {
            return this.Update(Original_time, real_water_level, real_storage, real_storage_difference, real_total_inflow, real_gate1_opening, real_gate1_outflow, real_gate1_DI, real_gate1_DO, real_gate2_opening, real_gate2_outflow, real_gate2_DI, real_gate2_DO, real_gate3_opening, real_gate3_outflow, real_gate3_DI, real_gate3_DO, real_spillways_outflow, real_intake_outflow, real_total_outflow, hmi_storage, hmi_storage_difference, hmi_total_inflow, hmi_gate1_opening, hmi_gate1_outflow, hmi_gate1_DI, hmi_gate1_DO, hmi_gate2_opening, hmi_gate2_outflow, hmi_gate2_DI, hmi_gate2_DO, hmi_gate3_opening, hmi_gate3_outflow, hmi_gate3_DI, hmi_gate3_DO, hmi_spillways_outflow, hmi_intake_outflow, hmi_total_outflow, control_gate1_opening, control_gate2_opening, control_gate3_opening, Original_id, Original_time, Original_real_water_level, Original_real_storage, Original_real_storage_difference, Original_real_total_inflow, Original_real_gate1_opening, Original_real_gate1_outflow, Original_real_gate1_DI, Original_real_gate1_DO, Original_real_gate2_opening, Original_real_gate2_outflow, Original_real_gate2_DI, Original_real_gate2_DO, Original_real_gate3_opening, Original_real_gate3_outflow, Original_real_gate3_DI, Original_real_gate3_DO, Original_real_spillways_outflow, Original_real_intake_outflow, Original_real_total_outflow, Original_hmi_storage, Original_hmi_storage_difference, Original_hmi_total_inflow, Original_hmi_gate1_opening, Original_hmi_gate1_outflow, Original_hmi_gate1_DI, Original_hmi_gate1_DO, Original_hmi_gate2_opening, Original_hmi_gate2_outflow, Original_hmi_gate2_DI, Original_hmi_gate2_DO, Original_hmi_gate3_opening, Original_hmi_gate3_outflow, Original_hmi_gate3_DI, Original_hmi_gate3_DO, Original_hmi_spillways_outflow, Original_hmi_intake_outflow, Original_hmi_total_outflow, Original_control_gate1_opening, Original_control_gate2_opening, Original_control_gate3_opening, Original_id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Dam_Status_LogTableAdapter _dam_Status_LogTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Dam_Status_LogTableAdapter Dam_Status_LogTableAdapter {
            get {
                return this._dam_Status_LogTableAdapter;
            }
            set {
                this._dam_Status_LogTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dam_Status_LogTableAdapter != null) 
                            && (this._dam_Status_LogTableAdapter.Connection != null))) {
                    return this._dam_Status_LogTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dam_Status_LogTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(CANSDamTestbedDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dam_Status_LogTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Dam_Status_Log.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dam_Status_LogTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(CANSDamTestbedDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dam_Status_LogTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Dam_Status_Log.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dam_Status_LogTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(CANSDamTestbedDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dam_Status_LogTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Dam_Status_Log.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dam_Status_LogTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(CANSDamTestbedDBDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dam_Status_LogTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dam_Status_LogTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dam_Status_LogTableAdapter != null)) {
                    revertConnections.Add(this._dam_Status_LogTableAdapter, this._dam_Status_LogTableAdapter.Connection);
                    this._dam_Status_LogTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dam_Status_LogTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dam_Status_LogTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dam_Status_LogTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dam_Status_LogTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dam_Status_LogTableAdapter != null)) {
                    this._dam_Status_LogTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dam_Status_LogTableAdapter]));
                    this._dam_Status_LogTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591